---
name: Update Phoenix Template

# WARNING: This workflow is specifically for maintaining the phoenix-devenv-template repository.
# It regenerates the entire Phoenix application, overwriting all files.
# DO NOT use this workflow in projects created from this template - it will destroy your code!
# 
# This workflow requires repository settings to allow GitHub Actions to create PRs:
# Settings > Actions > General > Workflow permissions:
# - Select "Read and write permissions"
# - Check "Allow GitHub Actions to create and approve pull requests"
#
# For auto-merge to work:
# Settings > General > Pull Requests:
# - Check "Allow auto-merge"

on:
  schedule:
    - cron: "0 0 * * 0" # Weekly on Sunday
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  update-phoenix:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: devenv shell bash -- -e {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Disable git hooks for CI
        shell: bash
        run: |
          git config core.hooksPath /dev/null

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - uses: cachix/cachix-action@v16
        with:
          name: devenv

      - name: Install devenv
        shell: bash
        run: nix profile install nixpkgs#devenv


      - name: Check current Phoenix version
        id: current_version
        run: |
          CURRENT_VERSION=$(./scripts/get-current-phoenix-version.sh)
          echo "Current Phoenix version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Get latest Phoenix version
        id: latest_version
        run: |
          # Install Elixir/Phoenix dependencies
          mix local.hex --force
          mix archive.install hex phx_new --force
          LATEST_VERSION=$(./scripts/get-latest-phoenix-version.sh)
          echo "Latest Phoenix version: $LATEST_VERSION"
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: Regenerate Phoenix application
        run: ./scripts/regenerate-phoenix.sh

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "Update Phoenix to version ${{ steps.latest_version.outputs.latest_version }}"
          title: "Update Phoenix to version ${{ steps.latest_version.outputs.latest_version }}"
          body: |
            This PR updates the Phoenix template to version ${{ steps.latest_version.outputs.latest_version }}.

            Changes:
            - Updated Phoenix dependencies
            - Regenerated Phoenix application structure
            - Preserved customized configuration
            
            This PR will be auto-merged if all CI checks pass.
          branch: update-phoenix-template
          delete-branch: true
      # - name: Enable auto-merge
      #   if: steps.cpr.outputs.pull-request-operation == 'created'
      #   uses: peter-evans/enable-pull-request-automerge@v3
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
      #     merge-method: squash
